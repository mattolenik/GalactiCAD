"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.matchType = matchType;
exports.preType = preType;
exports.atomType = atomType;
const meta_1 = require("./meta");
function matchType(expr) {
    // Check if special rule
    if (expr.kind === meta_1.ASTKinds.SPECIAL)
        return "PosInfo";
    if (expr.op === null)
        return preType(expr.pre);
    if (expr.op.kind === meta_1.ASTKinds.RANGESPEC) {
        return `${preType(expr.pre)}[]`;
    }
    if (expr.op.op === "?")
        return `Nullable<${preType(expr.pre)}>`;
    if (expr.op.op === '+')
        return `[${preType(expr.pre)}, ...${preType(expr.pre)}[]]`;
    return `${preType(expr.pre)}[]`;
}
function preType(expr) {
    if (expr.op && expr.op === "!") { // Negation types return null if matched, true otherwise
        return "boolean";
    }
    return atomType(expr.at);
}
function atomType(at) {
    if (at.kind === meta_1.ASTKinds.ATOM_1)
        return at.name;
    if (at.kind === meta_1.ASTKinds.ATOM_2)
        return "string";
    if (at.kind === meta_1.ASTKinds.EOF)
        return '{kind: ASTKinds.$EOF}';
    const subname = at.name;
    if (subname)
        return subname;
    throw new Error("Unknown subrule");
}
